{"version":3,"sources":["app/MatxLayout/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/MatxLayout/SharedCompoents/Footer.jsx","app/MatxLayout/SharedCompoents/ShoppingCart.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarToggle.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/BadgeSelected.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/customizerOptions.js","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout1Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout2Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/MatxCustomizer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarContent.jsx","app/MatxLayout/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebar.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx"],"names":["SidenavTheme","children","theme","useTheme","settings","useSelector","state","layout","sidenavTheme","themes","layout1Settings","leftSidebar","useStyles","makeStyles","palette","footer","minHeight","display","width","padding","flexDirection","margin","appbar","zIndex","backgroundColor","background","default","Footer","classes","date","Date","footerTheme","elevation","position","className","clsx","getFullYear","href","target","rel","miniCart","height","transition","ShoppingCart","container","useState","panelOpen","setPanelOpen","cartList","ecommerce","handleDrawerToggle","parentThemePalette","activeTheme","onClick","style","color","type","text","secondary","primary","badgeContent","length","variant","anchor","open","onClose","ModalProps","keepMounted","map","product","key","id","size","disabled","amount","src","imgUrl","alt","title","price","fontSize","toggle","right","bottom","SecondarySidebarToggle","isMobile","useMediaQuery","dispatch","useDispatch","setLayoutSettings","merge","secondarySidebar","useEffect","IconButton","aria-label","Icon","Fab","BadgeSelected","withStyles","badge","top","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","Tooltip","placement","themeColors","main","topbar","FormControl","component","FormLabel","RadioGroup","name","value","mode","onChange","FormControlLabel","control","Radio","label","Grid","spacing","bg","item","xs","invisible","bgImgURL","Paper","FormGroup","Switch","checked","get","Layout2Customizer","Object","keys","layout2Settings","navbar","dark","fontWeight","transform","marginBottom","cursor","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","alignItems","demoLayouts","thumbnail","isPro","options","activeLayout","bgOpacity","fixed","MatxCustomizer","props","setOpen","tabIndex","setTabIndex","updateSettings","newSettings","updatedSettings","setDefaultSettings","set","event","controlValue","tooglePanel","handleTabChange","index","ThemeProvider","Button","suppressScrollX","Card","Link","root","boxShadow","shadows","marginRight","SecondarySidebarContent","to","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","brand","hideOnCompact","Brand","sidenavHoverShow","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","left","breakpoints","up","Sidenav","navigation","navigations","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","updateSidebarMode","sidenav","primaryRGB","backgroundRepeat","backgroundPosition","backgroundSize","overflow","paper","maxWidth","userInfo","Layout1Sidenav","convertHexToRGB","getSidenavWidth"],"mappings":"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","file":"static/js/1.6913c681.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n  const theme = useTheme();\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const sidenavTheme =\r\n    settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n\r\n  return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { makeStyles, ThemeProvider, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  footer: {\r\n    minHeight: \"var(--topbar-height)\",\r\n    \"@media (max-width:499px)\": {\r\n      display: \"table\",\r\n      width: \"100%\",\r\n      minHeight: \"auto\",\r\n      padding: \"1rem 0\",\r\n      \"& .container\": {\r\n        flexDirection: \"column !important\",\r\n        \"& a\": {\r\n          margin: \"0 0 16px !important\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  appbar: {\r\n    zIndex: 96,\r\n    backgroundColor: palette.background.default,\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { settings } = useSelector(({ layout }) => layout);\r\n  const date = new Date();\r\n\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n\r\n  return (\r\n    <ThemeProvider theme={footerTheme}>\r\n      <AppBar elevation={0} position=\"static\" className={classes.appbar}>\r\n        <Toolbar className={clsx(\"flex items-center\", classes.footer)}>\r\n          <div className=\"flex items-center container w-full\">\r\n            <span className=\"m-auto\"></span>\r\n            <p className=\"m-0\">\r\n              &copy; {date.getFullYear()}{\" \"}\r\n              <a\r\n                href=\"https://www.vogaon.com/\"\r\n                target=\"_blank\"\r\n                className=\"text-primary fw-bold\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Vogaon.\r\n              </a>{\" \"}\r\n              All rights reserved.\r\n            </p>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Badge, Drawer, Icon, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, ThemeProvider, useTheme } from \"@material-ui/core/styles\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  miniCart: {\r\n    width: \"var(--sidenav-width)\",\r\n    \"& .cart__topbar\": {\r\n      height: \"var(--topbar-height)\",\r\n    },\r\n    \"& .mini-cart__item\": {\r\n      transition: \"background 300ms ease\",\r\n      \"&:hover\": {\r\n        background: \"rgba(0,0,0,0.01)\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ShoppingCart({ container }) {\r\n  const [panelOpen, setPanelOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { cartList } = useSelector((state) => state.ecommerce);\r\n  const { settings } = useSelector((state) => state.layout);\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary,\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n        }}\r\n      >\r\n        <div className={classes.miniCart}>\r\n          <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map((product) => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex items-center justify-between py-2 px-2\"\r\n            >\r\n              <div className=\"flex flex-column mr-2\">\r\n                <IconButton size=\"small\" onClick={() => {}}>\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() => {}}\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-2\">\r\n                <img\r\n                  className=\"w-80\"\r\n                  src={product.imgUrl}\r\n                  alt={product.title}\r\n                />\r\n              </div>\r\n              <div className=\"mr-2 text-center\">\r\n                <h6 className=\"m-0 mb-1\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton size=\"small\" onClick={() => {}}>\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Fab, Icon, IconButton, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { merge } from 'lodash';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setLayoutSettings } from '../../../redux/actions/LayoutActions';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    toggle: {\r\n        position: 'fixed',\r\n        right: '-30px',\r\n        bottom: '20px',\r\n        zIndex: 9999,\r\n        transition: 'all 0.15s ease',\r\n        '&.open': {\r\n            right: '10px'\r\n        }\r\n    }\r\n}));\r\n\r\nconst SecondarySidebarToggle = () => {\r\n    const isMobile = useMediaQuery('(max-width:767px)');\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { settings } = useSelector(({ layout }) => layout);\r\n\r\n    const toggle = () => {\r\n        dispatch(\r\n            setLayoutSettings(\r\n                merge({}, settings, {\r\n                    secondarySidebar: { open: !settings.secondarySidebar.open }\r\n                })\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            setLayoutSettings(\r\n                merge({}, settings, {\r\n                    secondarySidebar: { open: !isMobile }\r\n                })\r\n            )\r\n        );\r\n    }, [isMobile, setLayoutSettings]);\r\n\r\n    return (\r\n        <div\r\n            className={clsx({\r\n                [classes.toggle]: true,\r\n                open: settings.secondarySidebar.open\r\n            })}\r\n        >\r\n            {settings.secondarySidebar.open && (\r\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n                    <Icon>arrow_right</Icon>\r\n                </IconButton>\r\n            )}\r\n            {!settings.secondarySidebar.open && (\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    className=\"pr-9\"\r\n                    onClick={toggle}\r\n                >\r\n                    <Icon>arrow_left</Icon>\r\n                </Fab>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecondarySidebarToggle;\r\n","import { Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"0\",\r\n    right: \"0\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['whitePurple', 'whiteBlue', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['whitePurple', 'whiteBlue', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\",\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main,\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {topbarThemes.map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout1Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-8\">Sidebar background image</div>\r\n\r\n        <div>\r\n          <Grid container spacing={3}>\r\n            {sidebarBG.map((bg, i) => (\r\n              <Grid item xs={4} key={i}>\r\n                <BadgeSelected\r\n                  color=\"primary\"\r\n                  className=\"w-full h-full cursor-pointer\"\r\n                  badgeContent={<Icon>done</Icon>}\r\n                  invisible={\r\n                    settings.layout1Settings.leftSidebar.bgImgURL !== bg\r\n                  }\r\n                >\r\n                  <Paper\r\n                    onClick={() =>\r\n                      handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                    }\r\n                  >\r\n                    <img className=\"max-h-152 w-full block\" src={bg} alt=\"\" />\r\n                  </Paper>\r\n                </BadgeSelected>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import {\r\n  Button,\r\n  Card,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Icon,\r\n  IconButton,\r\n  Link,\r\n  Switch,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { get, merge, set } from 'lodash';\r\nimport React, { Fragment, useState } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setDefaultSettings, setLayoutSettings } from '../../../redux/actions/LayoutActions';\r\nimport { themeColors } from '../../MatxTheme/themeColors';\r\nimport BadgeSelected from './BadgeSelected';\r\nimport { mainThemes, topbarThemes } from './customizerOptions';\r\nimport Layout1Customizer from './Layout1Customizer';\r\nimport Layout2Customizer from './Layout2Customizer';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    label: {\r\n        color: palette.secondary.main,\r\n        backgroundColor: palette.primary.dark,\r\n        fontWeight: 700,\r\n        transform: 'rotate(90deg)',\r\n        marginBottom: '2.5rem',\r\n        padding: '.25rem .5rem',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        letterSpacing: '1.5px',\r\n        fontSize: '1rem',\r\n        '&:hover, &.open': {\r\n            backgroundColor: palette.secondary.main,\r\n            color: palette.secondary.contrastText\r\n        }\r\n    },\r\n    helpText: {\r\n        margin: '0px .5rem 1rem'\r\n    },\r\n    maxCustomizer: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        zIndex: 50\r\n    },\r\n    customizerCloseButton: {\r\n        position: 'absolute',\r\n        right: 8,\r\n        top: 8\r\n    },\r\n    layoutBox: {\r\n        '&:hover': {\r\n            '& .layout-name': {\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                width: '100%',\r\n                background: 'rgba(0,0,0,0.3)',\r\n                zIndex: 12\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst MatxCustomizer = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { settings } = useSelector((state) => state.layout);\r\n\r\n    const updateSettings = (newSettings) => {\r\n        let updatedSettings = merge({}, settings, newSettings);\r\n        dispatch(setLayoutSettings(updatedSettings));\r\n        dispatch(setDefaultSettings(updatedSettings));\r\n    };\r\n\r\n    const handleChange = (name, value) => {\r\n        let updatedSettings = set(settings, name, value);\r\n\r\n        updateSettings(updatedSettings);\r\n    };\r\n\r\n    const handleControlChange = (name) => (event) => {\r\n        let controlValue =\r\n            event.target.type === 'checkbox'\r\n                ? event.target.checked\r\n                : event.target.value;\r\n        handleChange(name, controlValue);\r\n    };\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open);\r\n    };\r\n    const handleTabChange = (index) => {\r\n        setTabIndex(index);\r\n    };\r\n\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <span\r\n                    className={clsx({ [classes.label]: true, open })}\r\n                    onClick={tooglePanel}\r\n                >\r\n                    DEMOS\r\n                </span>\r\n            </Tooltip>\r\n\r\n            {open && (\r\n                <ThemeProvider theme={activeTheme}>\r\n                    <div\r\n                        className={clsx(\r\n                            'flex-column fixed w-320 pb-8 elevation-z12 h-full-screen bg-default',\r\n                            classes.maxCustomizer\r\n                        )}\r\n                    >\r\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\r\n                            <Icon color=\"primary\">settings</Icon>\r\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n                            <IconButton\r\n                                onClick={tooglePanel}\r\n                                className={classes.customizerCloseButton}\r\n                            >\r\n                                <Icon>close</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"px-6 mb-4 flex\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(0)}\r\n                                className=\"mr-4\"\r\n                            >\r\n                                Demos\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(1)}\r\n                            >\r\n                                Settings\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Scrollbar\r\n                            options={{ suppressScrollX: true }}\r\n                            className=\"px-4\"\r\n                        >\r\n                            {tabIndex === 0 && (\r\n                                <div className=\"mb-8 mx-2\">\r\n                                    <div className=\"text-muted\">Layouts</div>\r\n\r\n                                    <div className=\"flex-column\">\r\n                                        {demoLayouts.map((layout) => (\r\n                                            <BadgeSelected\r\n                                                color=\"secondary\"\r\n                                                className={clsx(\r\n                                                    'w-full my-3 max-h-152 cursor-pointer',\r\n                                                    classes.layoutBox\r\n                                                )}\r\n                                                badgeContent={'Pro'}\r\n                                                invisible={!layout.isPro}\r\n                                                key={layout.name}\r\n                                            >\r\n                                                <Card\r\n                                                    className=\"relative\"\r\n                                                    onClick={() =>\r\n                                                        updateSettings(\r\n                                                            layout.options\r\n                                                        )\r\n                                                    }\r\n                                                    elevation={4}\r\n                                                >\r\n                                                    <div className=\"layout-name hidden\">\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                        >\r\n                                                            {layout.name}\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <img\r\n                                                        className=\"w-full\"\r\n                                                        src={layout.thumbnail}\r\n                                                        alt={layout.name}\r\n                                                    />\r\n                                                </Card>\r\n                                            </BadgeSelected>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* END LAYOUT */}\r\n\r\n                            {tabIndex === 1 && (\r\n                                <div>\r\n                                    <div className={classes.helpText}>\r\n                                        Set different themes to body, topbar,\r\n                                        sidebar, footer & etc. Check out the{' '}\r\n                                        <Link\r\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Documentation\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"mb-4 mx-2\">\r\n                                        <div className=\"text-muted mb-4\">\r\n                                            Main theme\r\n                                        </div>\r\n                                        <div className=\"flex flex-wrap m--2\">\r\n                                            {mainThemes.map((color, i) => (\r\n                                                <Tooltip\r\n                                                    key={i}\r\n                                                    title={color}\r\n                                                    placement=\"top\"\r\n                                                >\r\n                                                    <div\r\n                                                        className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                                                        onClick={() =>\r\n                                                            updateSettings({\r\n                                                                activeTheme:\r\n                                                                    color\r\n                                                            })\r\n                                                        }\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                themeColors[\r\n                                                                    color\r\n                                                                ].palette\r\n                                                                    .primary\r\n                                                                    .main\r\n                                                        }}\r\n                                                    >\r\n                                                        {settings.activeTheme ===\r\n                                                            color && (\r\n                                                            <Icon>done</Icon>\r\n                                                        )}\r\n                                                        <div\r\n                                                            className={\r\n                                                                settings.themes[\r\n                                                                    color\r\n                                                                ].palette.type\r\n                                                            }\r\n                                                        ></div>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {settings.activeLayout === 'layout1' && (\r\n                                        <Layout1Customizer\r\n                                            settings={settings}\r\n                                            handleChange={handleChange}\r\n                                            handleControlChange={\r\n                                                handleControlChange\r\n                                            }\r\n                                        />\r\n                                    )}\r\n\r\n                                    {settings.activeLayout === 'layout2' && (\r\n                                        <Layout2Customizer\r\n                                            settings={settings}\r\n                                            handleChange={handleChange}\r\n                                            handleControlChange={\r\n                                                handleControlChange\r\n                                            }\r\n                                        />\r\n                                    )}\r\n\r\n                                    <div className=\"mx-2 mb-6\">\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <FormLabel component=\"legend\">\r\n                                                Footer\r\n                                            </FormLabel>\r\n                                            <FormGroup>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={get(\r\n                                                                settings.footer,\r\n                                                                'show'\r\n                                                            )}\r\n                                                            onChange={handleControlChange(\r\n                                                                'footer.show'\r\n                                                            )}\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"Show\"\r\n                                                />\r\n\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={get(\r\n                                                                settings\r\n                                                                    .layout1Settings\r\n                                                                    .footer,\r\n                                                                'fixed'\r\n                                                            )}\r\n                                                            onChange={handleControlChange(\r\n                                                                'footer.fixed'\r\n                                                            )}\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"Fixed\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"mx-2 mb-6\">\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <FormLabel component=\"legend\">\r\n                                                Secondary sidebar\r\n                                            </FormLabel>\r\n                                            <FormGroup>\r\n                                                <FormControlLabel\r\n                                                    control={\r\n                                                        <Switch\r\n                                                            checked={get(\r\n                                                                settings.secondarySidebar,\r\n                                                                'show'\r\n                                                            )}\r\n                                                            onChange={handleControlChange(\r\n                                                                'secondarySidebar.show'\r\n                                                            )}\r\n                                                        />\r\n                                                    }\r\n                                                    label=\"Show\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-4 mx-2\">\r\n                                        <div className=\"text-muted mb-4\">\r\n                                            Secondary sidebar theme\r\n                                        </div>\r\n                                        <div className=\"flex flex-wrap m--2\">\r\n                                            {topbarThemes.map((color, i) => (\r\n                                                <Tooltip\r\n                                                    key={i}\r\n                                                    title={color}\r\n                                                    placement=\"top\"\r\n                                                >\r\n                                                    <div\r\n                                                        className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                                                        onClick={() =>\r\n                                                            handleChange(\r\n                                                                'secondarySidebar.theme',\r\n                                                                color\r\n                                                            )\r\n                                                        }\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                themeColors[\r\n                                                                    color\r\n                                                                ].palette\r\n                                                                    .primary\r\n                                                                    .main\r\n                                                        }}\r\n                                                    >\r\n                                                        {settings\r\n                                                            .secondarySidebar\r\n                                                            .theme ===\r\n                                                            color && (\r\n                                                            <Icon>done</Icon>\r\n                                                        )}\r\n                                                        <div\r\n                                                            className={\r\n                                                                settings.themes[\r\n                                                                    color\r\n                                                                ].palette.type\r\n                                                            }\r\n                                                        ></div>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-4 mx-2\">\r\n                                        <div className=\"text-muted mb-4\">\r\n                                            Footer theme\r\n                                        </div>\r\n                                        <div className=\"flex flex-wrap m--2\">\r\n                                            {topbarThemes.map((color, i) => (\r\n                                                <Tooltip\r\n                                                    key={i}\r\n                                                    title={color}\r\n                                                    placement=\"top\"\r\n                                                >\r\n                                                    <div\r\n                                                        className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                                                        onClick={() =>\r\n                                                            handleChange(\r\n                                                                'footer.theme',\r\n                                                                color\r\n                                                            )\r\n                                                        }\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                themeColors[\r\n                                                                    color\r\n                                                                ].palette\r\n                                                                    .primary\r\n                                                                    .main\r\n                                                        }}\r\n                                                    >\r\n                                                        {settings.footer\r\n                                                            .theme ===\r\n                                                            color && (\r\n                                                            <Icon>done</Icon>\r\n                                                        )}\r\n                                                        <div\r\n                                                            className={\r\n                                                                settings.themes[\r\n                                                                    color\r\n                                                                ].palette.type\r\n                                                            }\r\n                                                        ></div>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </ThemeProvider>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true\r\n                }\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'Dark Theme',\r\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'purpleDark1',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92\r\n                },\r\n                topbar: {\r\n                    theme: 'purpleDark1',\r\n                    fixed: true\r\n                }\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'Horizontal Navigation',\r\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'purple1',\r\n            layout2Settings: {\r\n                mode: 'full'\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1'\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nexport default MatxCustomizer;\r\n","import React from \"react\";\r\nimport { IconButton, Icon } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MatxCustomizer from \"../MatxCustomizer/MatxCustomizer\";\r\nimport ShoppingCart from \"../ShoppingCart\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width: (props) => props.width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: palette.primary.main,\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n  },\r\n  \"@global\": {\r\n    \"@media screen and (min-width: 767px)\": {\r\n      \".content-wrap, .layout2.layout-contained, .layout2.layout-full\": {\r\n        marginRight: (props) => props.width,\r\n      },\r\n      \".matx-customizer\": {\r\n        right: (props) => props.width,\r\n      },\r\n    },\r\n    \"@media screen and (max-width: 959px)\": {\r\n      \".toolbar-menu-wrap .menu-area\": {\r\n        width: (props) => `calc(100% - ${props.width})`,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarContent = () => {\r\n  const classes = useStyles({ width: \"50px\" });\r\n\r\n  return (\r\n    <div className={clsx(\"secondary-sidebar\", classes.root)}>\r\n      <span className=\"m-auto\"></span>\r\n\r\n      <MatxCustomizer />\r\n\r\n      <ShoppingCart />\r\n\r\n      <Link to=\"/chat\">\r\n        <IconButton size=\"small\" aria-label=\"delete\" className=\"my-3\">\r\n          <Icon>comments</Icon>\r\n        </IconButton>\r\n      </Link>\r\n\r\n      <span className=\"m-auto\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarContent;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SecondarySidenavTheme\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SecondarySidebarToggle from \"./SecondarySidebarToggle\";\r\nimport SecondarySidebarContent from \"./SecondarySidebarContent\";\r\nimport SecondarySidenavTheme from \"../../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme\";\r\n\r\nconst SecondarySidebar = () => {\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const secondarySidebarTheme =\r\n    settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {settings.secondarySidebar.open && <SecondarySidebarContent />}\r\n      <SecondarySidebarToggle />\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    brand: {\r\n        padding: '20px 18px 20px 24px',\r\n        backgroundColor: '#fff',\r\n        height: 64\r\n    },\r\n    hideOnCompact: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst Brand = ({ children }) => {\r\n    const classes = useStyles();\r\n    const { settings } = useSelector((state) => state.layout);\r\n    const leftSidebar = settings.layout1Settings.leftSidebar;\r\n    const { mode } = leftSidebar;\r\n\r\n    return (\r\n        <div\r\n            className={clsx('flex items-center justify-center', classes.brand)}\r\n        >\r\n            <div className=\"flex items-center justify-start\">\r\n                <Link to=\"/dashboard\">\r\n                    <img\r\n                        src=\"/assets/images/logos/logo.webp\"\r\n                        alt=\"Vogaon\"\r\n                        height={20}\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div\r\n                className={clsx({\r\n                    sidenavHoverShow: true,\r\n                    [classes.hideOnCompact]: mode === 'compact'\r\n                })}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Brand;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { MatxVerticalNav } from \"../../../matx\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { setLayoutSettings } from \"../../redux/actions/LayoutActions\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  scrollable: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n  },\r\n  sidenavMobileOverlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"100vw\",\r\n    background: \"transparent\",\r\n    zIndex: -1,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Sidenav = ({ children }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { settings } = useSelector((state) => state.layout);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    dispatch(\r\n      setLayoutSettings({\r\n        ...settings,\r\n        [activeLayoutSettingsName]: {\r\n          ...activeLayoutSettings,\r\n          leftSidebar: {\r\n            ...activeLayoutSettings.leftSidebar,\r\n            ...sidebarSettings,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar options={{ suppressScrollX: true }} className=\"relative pt-4\">\r\n        {children}\r\n        <MatxVerticalNav navigation={navigations} />\r\n      </Scrollbar>\r\n\r\n      <div\r\n        onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n        className={classes.sidenavMobileOverlay}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { convertHexToRGB } from '../../../utils';\r\nimport Brand from '../SharedCompoents/Brand';\r\nimport Sidenav from '../SharedCompoents/Sidenav';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    sidenav: ({ width, primaryRGB }) => ({\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        height: '100vh',\r\n        width: width,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'top',\r\n        backgroundSize: 'cover',\r\n        zIndex: 99,\r\n        overflow: 'hidden',\r\n        color: palette.text.primary,\r\n        transition: 'all 250ms ease-in-out',\r\n        backgroundColor: palette.background.paper,\r\n        // boxShadow: '0px 4px 12px rgb(0,0,0,0.07)',\r\n        '&:hover': {\r\n            width: 'var(--sidenav-width)',\r\n            '& .sidenavHoverShow': {\r\n                display: 'block'\r\n            },\r\n            '& .compactNavItem': {\r\n                width: '100%',\r\n                maxWidth: '100%',\r\n                '& .nav-bullet': {\r\n                    display: 'block'\r\n                },\r\n                '& .nav-bullet-text': {\r\n                    display: 'none'\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    hideOnCompact: {\r\n        display: 'none'\r\n    },\r\n    userInfo: {}\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme();\r\n    const { settings } = useSelector((state) => state.layout);\r\n    const leftSidebar = settings.layout1Settings.leftSidebar;\r\n    const { mode } = leftSidebar;\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return 'var(--sidenav-compact-width)';\r\n            default:\r\n                return 'var(--sidenav-width)';\r\n        }\r\n    };\r\n\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n    const classes = useStyles({\r\n        ...leftSidebar,\r\n        width: getSidenavWidth(),\r\n        primaryRGB\r\n    });\r\n\r\n    return (\r\n        <div className={classes.sidenav}>\r\n            <div className=\"flex-column relative h-full\">\r\n                <Brand />\r\n                <Sidenav />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout1Sidenav;\r\n"],"sourceRoot":""}